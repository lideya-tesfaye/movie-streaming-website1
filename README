 Movie Streaming Website
A full-stack movie streaming platform built with the MERN (MongoDB, Express, React, Node.js) stack.
This platform allows users to browse, watch trailers, and manage movies, series, short films, and more. With user authentication and personalized features, it serves as a scalable foundation for a modern streaming service.

Features

*  Dynamic Content Display – Movies, series, shorts, and trailers served from the backend.
*  Trailer Playback – Modal-based video player for seamless trailer viewing.
*  Authentication – Secure JWT-based sign-in system.
*  User Interactions – Like movies and maintain a personal watchlist.
*  Responsive UI – Built with HTML, CSS, and Vanilla JS (flexbox, hover effects, modal windows).

#Tech Stack
 Frontend
* HTML5, CSS3, Vanilla JavaScript
* Font Awesome (icons)
* CSS Flexbox (responsive design)
* Custom Modals (video player & sign-in)

Backend
* Node.js & Express.js (REST API)
* MongoDB with Mongoose ODM
* JWT (JSON Web Tokens) for authentication
* express-validator (input validation)
* CORS (cross-origin requests)
* Morgan (HTTP request logging)

#Development Tools
* npm – package management
* Nodemon – live reloading
* Postman – API testing

#Project Structure
movie-streaming-backend/
├── src/
│   ├── controllers/
│   │   ├── auth.controller.js
│   │   ├── movie.controller.js
│   │   ├── genre.controller.js
│   │   └── user.controller.js
│   ├── middleware/
│   │   └── auth.js
│   ├── models/
│   │   ├── Movie.js
│   │   ├── Genre.js
│   │   └── User.js
│   ├── routes/
│   │   ├── auth.routes.js
│   │   ├── movie.routes.js
│   │   ├── genre.routes.js
│   │   └── user.routes.js
│   └── index.js
├── scripts/
│   └── seed.js
├── package.json
└── README.md

#Team Members & Roles

* Ruth Tsegamlak – Backend Developer
* Lideya Tesfaye – Frontend Developer
* Ruth Zedingel – Frontend Developer

# Future Enhancements

* Migrate frontend to React for better state management.
* Add user registration with email verification.
* Implement a recommendation engine based on likes/watchlist.
* Enable full movie playback with secure streaming.
* Add search & filter functionality on the frontend.
* Improve UI with animations and advanced responsive design for mobile.

#Getting Started
 Prerequisites
* Node.js & npm installed
* MongoDB running locally or in the cloud

Installation
# Clone the repository
git clone https://github.com/lideya-tesfaye/movie-streaming-website.git
cd movie-streaming-backend

# Install dependencies
npm install

# Run development server
npm run dev

# API Testing
Use Postman to test available routes (/auth, /movies, /genres, /users).
